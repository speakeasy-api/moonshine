/*
 * Utilities CSS - Exposed Tailwind Utilities
 * These are the utilities that are exposed as Tailwind classes.
 * They reference the primitives defined in base.css
 */

/*
  TODO: rename to text-*
  TODO: replace these with the ones for the new brand
  TODO: Delete all typography classes https://linear.app/speakeasy/issue/DES-325/replace-all-references-to-typography-classes
*/
@utility typography-heading-xl {
  font-size: 2.063rem;
  font-weight: 300;
  line-height: 1.375;
  letter-spacing: 0.0015em;
  font-family: var(--font-diatype);
}
@utility typography-heading-lg {
  font-size: 1.813rem;
  font-weight: 300;
  line-height: 1.5;
  letter-spacing: 0.0015em;
  font-family: var(--font-diatype);
}
@utility typography-heading-md {
  font-size: 1.625rem;
  font-weight: 300;
  line-height: 1.6;
  letter-spacing: 0.0015em;
  font-family: var(--font-diatype);
}
@utility typography-heading-sm {
  font-size: 1.438rem;
  font-weight: 300;
  line-height: 1.6;
  letter-spacing: 0.0015em;
  font-family: var(--font-diatype);
}
@utility typography-heading-xs {
  font-size: 1.25rem;
  font-weight: 300;
  line-height: 1.6;
  letter-spacing: 0.0015em;
  font-family: var(--font-diatype);
}
@utility typography-heading-xxs {
  font-size: 1.125rem;
  font-weight: 300;
  line-height: 1.778;
  letter-spacing: 0.0015em;
  font-family: var(--font-diatype);
}
@utility typography-body-lg {
  font-size: 1.125rem;
  font-weight: 400;
  line-height: 1.75;
  letter-spacing: 0.0025em;
  font-family: var(--font-diatype);
}
@utility typography-body-md {
  font-size: 1rem;
  font-weight: 400;
  line-height: 1.75;
  letter-spacing: 0.0025em;
  font-family: var(--font-diatype);
}
@utility typography-body-sm {
  font-size: 0.875rem;
  font-weight: 400;
  line-height: 1.75;
  letter-spacing: 0.0025em;
  font-family: var(--font-diatype);
}
@utility typography-body-xs {
  font-size: 0.75rem;
  font-weight: 400;
  line-height: 1.75;
  letter-spacing: 0.0025em;
  font-family: var(--font-diatype);
}

@utility container {
  padding-inline: 1rem;
  margin-inline: auto;

  @variant sm {
    padding-inline: 0.5rem;
  }

  @variant md {
    padding-inline: 1rem;
  }

  @variant lg {
    padding-inline: 1.5rem;
  }

  @variant xl {
    padding-inline: 2rem;
  }

  @variant 2xl {
    padding-inline: 2.5rem;
  }
}

@utility bg-mask {
  background-image: linear-gradient(
    to bottom,
    var(--background) 0%,
    transparent 5%,
    transparent 95%,
    var(--background) 100%
  );
}

/* Display Typography */

/* This token name is not final */
@utility text-display-2xl {
  font-size: 11.375rem; /* 182px */
  font-weight: 100;
  line-height: 1;
  letter-spacing: -0.04em;
  font-family: var(--font-tobias);
  color: var(--color-base-black);
  
  @variant dark {
    color: var(--color-base-white);
  }
}

@utility text-display-xl {
  font-size: 5.625rem;
  font-weight: 100;
  line-height: 1.1;
  letter-spacing: -0.04em;
  font-family: var(--font-tobias);
  color: var(--color-base-black);
  
  @variant dark {
    color: var(--color-base-white);
  }
}

@utility text-display-lg {
  font-size: 4.188rem;
  font-weight: 100;
  line-height: 1.2;
  letter-spacing: -0.04em;
  font-family: var(--font-tobias);
  color: var(--color-base-black);
  
  @variant dark {
    color: var(--color-base-white);
  }
}

@utility text-display-md {
  font-size: 3.188rem;
  font-weight: 100;
  line-height: 1.3;
  letter-spacing: -0.04em;
  font-family: var(--font-tobias);
  color: var(--color-base-black);
  
  @variant dark {
    color: var(--color-base-white);
  }
}

@utility text-display-sm {
  font-size: 2.375rem;
  font-weight: 100;
  line-height: 1.375;
  letter-spacing: -0.04em;
  font-family: var(--font-tobias);
  color: var(--color-base-black);
  
  @variant dark {
    color: var(--color-base-white);
  }
}

@utility text-display-xs {
  font-size: 1.75rem;
  font-weight: 100;
  line-height: 1.4;
  letter-spacing: -0.04em;
  font-family: var(--font-tobias);
  color: var(--color-base-black);
  
  @variant dark {
    color: var(--color-base-white);
  }
}

/* Heading */
@utility text-heading-xl {
  font-size: 2.063rem;
  font-weight: 300;
  line-height: 1.375;
  letter-spacing: 0.0015em;
  font-family: var(--font-diatype);
  color: var(--color-neutral-900);
  
  @variant dark {
    color: var(--color-neutral-100);
  }
}
@utility text-heading-lg {
  font-size: 1.813rem;
  font-weight: 300;
  line-height: 1.5;
  letter-spacing: 0.0015em;
  font-family: var(--font-diatype);
  color: var(--color-neutral-900);
  
  @variant dark {
    color: var(--color-neutral-100);
  }
}
@utility text-heading-md {
  font-size: 1.625rem;
  font-weight: 300;
  line-height: 1.6;
  letter-spacing: 0.0015em;
  font-family: var(--font-diatype);
  color: var(--color-neutral-900);
  
  @variant dark {
    color: var(--color-neutral-100);
  }
}
@utility text-heading-sm {
  font-size: 1.438rem;
  font-weight: 300;
  line-height: 1.6;
  letter-spacing: 0.0015em;
  font-family: var(--font-diatype);
  color: var(--color-neutral-800);
  
  @variant dark {
    color: var(--color-neutral-200);
  }
}
@utility text-heading-xs {
  font-size: 1.25rem;
  font-weight: 300;
  line-height: 1.6;
  letter-spacing: 0.0015em;
  font-family: var(--font-diatype);
  color: var(--color-neutral-800);
  
  @variant dark {
    color: var(--color-neutral-200);
  }
}

/* Body */
@utility text-body-lg {
  font-size: 1.125rem;
  font-weight: 400;
  line-height: 1.75;
  letter-spacing: 0.0025em;
  font-family: var(--font-diatype);
  color: var(--color-neutral-700);
  
  @variant dark {
    color: var(--color-neutral-300);
  }
}
@utility text-body-md {
  font-size: 1rem;
  font-weight: 400;
  line-height: 1.75;
  letter-spacing: 0.0025em;
  font-family: var(--font-diatype);
  color: var(--color-neutral-700);
  
  @variant dark {
    color: var(--color-neutral-300);
  }
}
@utility text-body-sm {
  font-size: 0.875rem;
  font-weight: 400;
  line-height: 1.75;
  letter-spacing: 0.0025em;
  font-family: var(--font-diatype);
  color: var(--color-neutral-700);
  
  @variant dark {
    color: var(--color-neutral-300);
  }
}
@utility text-body-xs {
  font-size: 0.75rem;
  font-weight: 400;
  line-height: 1.75;
  letter-spacing: 0.0025em;
  font-family: var(--font-diatype);
  color: var(--color-neutral-700);
  
  @variant dark {
    color: var(--color-neutral-300);
  }
}

/* Code */
@utility text-codeline-md {
  font-size: 1rem;
  font-weight: 300;
  line-height: 1.75;
  letter-spacing: 0.0025em;
  font-family: var(--font-diatype-mono);
  color: var(--color-neutral-700);
  
  @variant dark {
    color: var(--color-neutral-300);
  }
}
@utility text-codeline-sm {
  font-size: 0.875rem;
  font-weight: 300;
  line-height: 1.75;
  letter-spacing: 0.0025em;
  font-family: var(--font-diatype-mono);
  color: var(--color-neutral-700);
  
  @variant dark {
    color: var(--color-neutral-300);
  }
}
@utility text-codeline-xs {
  font-size: 0.75rem;
  font-weight: 300;
  line-height: 1.7;
  letter-spacing: 0.0025em;
  font-family: var(--font-diatype-mono);
  color: var(--color-neutral-700);
  
  @variant dark {
    color: var(--color-neutral-300);
  }
}

/* Buttons */
@utility text-button-md {
  font-size: 1rem;
  font-weight: 400;
  line-height: 1.75;
  letter-spacing: 0.0025em;
  font-family: var(--font-diatype);
  color: var(--color-neutral-700);
  
  @variant dark {
    color: var(--color-neutral-300);
  }
}
@utility text-button-sm {
  font-size: 0.875rem;
  font-weight: 400;
  line-height: 1.75;
  letter-spacing: 0.0025em;
  font-family: var(--font-diatype);
  color: var(--color-neutral-700);
  
  @variant dark {
    color: var(--color-neutral-300);
  }
}
@utility text-button-xs {
  font-size: 0.75rem;
  font-weight: 400;
  line-height: 1.75;
  letter-spacing: 0.0025em;
  font-family: var(--font-diatype);
  color: var(--color-neutral-700);
  
  @variant dark {
    color: var(--color-neutral-300);
  }
}

/* Text colors - using primitive tokens directly */

/* Body text utilities */
@utility text-highlight {
  color: var(--color-neutral-900);
  
  @variant dark {
    color: var(--color-neutral-100);
  }
}

@utility text-default {
  color: var(--color-neutral-700);
  
  @variant dark {
    color: var(--color-neutral-300);
  }
}

@utility text-muted {
  color: var(--color-neutral-900-64);
  
  @variant dark {
    color: var(--color-neutral-100-64);
  }
}

@utility text-placeholder {
  color: var(--color-neutral-900-56);
  
  @variant dark {
    color: var(--color-neutral-100-56);
  }
}

@utility text-disabled {
  color: var(--color-neutral-900-40);
  
  @variant dark {
    color: var(--color-neutral-100-40);
  }
}

/* Fixed dark text (always dark regardless of theme) */
@utility text-highlight-fixed-dark {
  color: var(--color-base-black);
}

@utility text-default-fixed-dark {
  color: var(--color-neutral-900);
}

@utility text-muted-fixed-dark {
  color: var(--color-neutral-900-64);
}

/* Fixed light text (always light regardless of theme) */
@utility text-highlight-fixed-light {
  color: var(--color-base-white);
}

@utility text-default-fixed-light {
  color: var(--color-neutral-100);
}

@utility text-muted-fixed-light {
  color: var(--color-neutral-100-64);
}

/* Inverse text (opposite of current theme) */
@utility text-highlight-inverse {
  color: var(--color-base-white);
  
  @variant dark {
    color: var(--color-base-black);
  }
}

@utility text-default-inverse {
  color: var(--color-neutral-100);
  
  @variant dark {
    color: var(--color-neutral-900);
  }
}

@utility text-muted-inverse {
  color: var(--color-neutral-100-64);
  
  @variant dark {
    color: var(--color-neutral-900-64);
  }
}


/* Link colors - using primitive tokens */
@utility text-link-primary {
  color: var(--color-brand-blue-600);
  
  @variant dark {
    color: var(--color-brand-blue-400);
  }
}

@utility text-link-secondary {
  color: var(--color-base-black);
  
  @variant dark {
    color: var(--color-base-white);
  }
}

@utility text-link-visited {
  color: var(--color-feedback-violet-600);
  
  @variant dark {
    color: var(--color-feedback-violet-300);
  }
}

/* Destructive text - using primitive tokens */
@utility text-default-destructive {
  color: var(--color-feedback-red-700);
  
  @variant dark {
    color: var(--color-feedback-red-300);
  }
}

@utility text-link-destructive {
  color: var(--color-feedback-red-900);
  
  @variant dark {
    color: var(--color-feedback-red-200);
  }
}

/* Information text - using primitive tokens */
@utility text-default-information {
  color: var(--color-feedback-blue-700);
  
  @variant dark {
    color: var(--color-feedback-blue-300);
  }
}

@utility text-link-information {
  color: var(--color-feedback-blue-900);
  
  @variant dark {
    color: var(--color-feedback-blue-200);
  }
}

/* Success text - using primitive tokens */
@utility text-default-success {
  color: var(--color-feedback-green-700);
  
  @variant dark {
    color: var(--color-feedback-green-300);
  }
}

@utility text-link-success {
  color: var(--color-feedback-green-900);
  
  @variant dark {
    color: var(--color-feedback-green-200);
  }
}

/* Warning text - using primitive tokens */
@utility text-default-warning {
  color: var(--color-feedback-orange-700);
  
  @variant dark {
    color: var(--color-feedback-orange-300);
  }
}

@utility text-link-warning {
  color: var(--color-feedback-orange-900);
  
  @variant dark {
    color: var(--color-feedback-orange-200);
  }
}


@utility bg-gradient-primary {
  background: var(--gradient-brand-primary);
}

@utility border-gradient-primary {
  border-image: var(--gradient-brand-primary) 1;
}

@utility bg-surface-primary {
  background-color: var(--color-base-white);

  @variant dark {
    background-color: var(--color-base-black);
  }
}

@utility bg-surface-secondary {
  background-color: var(--color-neutral-100);

  @variant dark {
    background-color: var(--color-neutral-900);
  }
}

@utility bg-warning {
  background-color: var(--color-feedback-orange-100);
  
  @variant dark {
    background-color: var(--color-feedback-orange-900);
  }
}

@utility text-warning {
  color: var(--color-feedback-orange-700);
  
  @variant dark {
    color: var(--color-feedback-orange-300);
  }
}

@utility border-warning {
  border-color: var(--color-feedback-orange-300);
  border-width: 1px;
  border-style: solid;
  
  @variant dark {
    border-color: var(--color-feedback-orange-700);
  }
}


/* Link underline utilities - using primitive tokens */
@utility underline-link-primary {
  color: var(--color-brand-blue-600);
  text-decoration: underline;
  text-underline-offset: 0.125rem;
  
  @variant dark {
    color: var(--color-brand-blue-400);
  }
}

@utility underline-link-secondary {
  color: var(--color-base-black);
  text-decoration: underline;
  text-underline-offset: 0.125rem;
  
  @variant dark {
    color: var(--color-base-white);
  }
}

@utility underline-link-visited {
  color: var(--color-feedback-violet-600);
  text-decoration: underline;
  text-underline-offset: 0.125rem;
  
  @variant dark {
    color: var(--color-feedback-violet-300);
  }
}

/* ======================================
 * BORDERS - Standardized token patterns
 * Pattern: border-{category}-{intensity}
 * Rest state has no suffix, follows Tailwind conventions
 * ======================================= */

/* Neutral border utilities - inline values for better performance */
/* Follows Tailwind pattern: rest state has no suffix */
@utility border-neutral-active {
  border-color: var(--color-neutral-800);
  
  @variant dark {
    border-color: var(--color-neutral-300);
  }
}

@utility border-neutral-hover {
  border-color: var(--color-neutral-700);
  
  @variant dark {
    border-color: var(--color-neutral-400);
  }
}

/* Primary neutral border - rest state (no suffix) */
@utility border-neutral {
  border-color: var(--color-neutral-600);
  
  @variant dark {
    border-color: var(--color-neutral-500);
  }
}

/* Backward compatibility alias - will be deprecated */
@utility border-neutral-default {
  border-color: var(--color-neutral-600);
  
  @variant dark {
    border-color: var(--color-neutral-500);
  }
}

@utility border-neutral-disabled {
  border-color: var(--color-neutral-600);
  opacity: 0.4;
  
  @variant dark {
    border-color: var(--color-neutral-500);
    opacity: 0.4;
  }
}

@utility border-neutral-softest {
  border-color: var(--color-neutral-200);
  
  @variant dark {
    border-color: var(--color-neutral-800);
  }
}

@utility border-neutral-inset {
  border-color: var(--color-neutral-300);
  
  @variant dark {
    border-color: var(--color-neutral-700);
  }
}

@utility border-neutral-alpha {
  border-color: var(--color-neutral-500-40);
  
  @variant dark {
    border-color: var(--color-neutral-600-40);
  }
}

/* Destructive border utilities - inline values */
/* border-destructive-default is now border-destructive (rest state) */
@utility border-destructive-highlight {
  border-color: var(--color-feedback-red-400);
  
  @variant dark {
    border-color: var(--color-feedback-red-400);
  }
}

/* Primary destructive border - rest state (no suffix) */
@utility border-destructive {
  border-color: var(--color-feedback-red-600);
  
  @variant dark {
    border-color: var(--color-feedback-red-400);
  }
}

/* Backward compatibility alias - will be deprecated */
@utility border-destructive-default {
  border-color: var(--color-feedback-red-600);
  
  @variant dark {
    border-color: var(--color-feedback-red-400);
  }
}

@utility border-destructive-muted {
  border-color: var(--color-feedback-red-600-56);
  
  @variant dark {
    border-color: var(--color-feedback-red-400-56);
  }
}

@utility border-destructive-softest {
  border-color: var(--color-feedback-red-100);
  
  @variant dark {
    border-color: var(--color-feedback-red-900);
  }
}

/* Information border utilities - inline values */
/* border-information-default is now border-information (rest state) */
@utility border-information-highlight {
  border-color: var(--color-feedback-blue-400);
  
  @variant dark {
    border-color: var(--color-feedback-blue-400);
  }
}

/* Primary information border - rest state (no suffix) */
@utility border-information {
  border-color: var(--color-feedback-blue-600);
  
  @variant dark {
    border-color: var(--color-feedback-blue-400);
  }
}

/* Backward compatibility alias - will be deprecated */
@utility border-information-default {
  border-color: var(--color-feedback-blue-600);
  
  @variant dark {
    border-color: var(--color-feedback-blue-400);
  }
}

@utility border-information-muted {
  border-color: var(--color-feedback-blue-500-56);
  
  @variant dark {
    border-color: var(--color-feedback-blue-400-56);
  }
}

@utility border-information-softest {
  border-color: var(--color-feedback-blue-100);
  
  @variant dark {
    border-color: var(--color-feedback-blue-900);
  }
}

/* Success border utilities - inline values */
/* border-success-default is now border-success (rest state) */
@utility border-success-highlight {
  border-color: var(--color-feedback-green-400);
  
  @variant dark {
    border-color: var(--color-feedback-green-400);
  }
}

/* Primary success border - rest state (no suffix) */
@utility border-success {
  border-color: var(--color-feedback-green-600);
  
  @variant dark {
    border-color: var(--color-feedback-green-400);
  }
}

/* Backward compatibility alias - will be deprecated */
@utility border-success-default {
  border-color: var(--color-feedback-green-600);
  
  @variant dark {
    border-color: var(--color-feedback-green-400);
  }
}

@utility border-success-muted {
  border-color: var(--color-feedback-green-500-56);
  
  @variant dark {
    border-color: var(--color-feedback-green-400-56);
  }
}

@utility border-success-softest {
  border-color: var(--color-feedback-green-100);
  
  @variant dark {
    border-color: var(--color-feedback-green-900);
  }
}

/* Warning border utilities - inline values */
/* border-warning-default is now border-warning (rest state) */
@utility border-warning-highlight {
  border-color: var(--color-feedback-orange-400);
  
  @variant dark {
    border-color: var(--color-feedback-orange-400);
  }
}

/* Primary warning border - rest state (no suffix) */
@utility border-warning {
  border-color: var(--color-feedback-orange-600);
  
  @variant dark {
    border-color: var(--color-feedback-orange-400);
  }
}

/* Backward compatibility alias - will be deprecated */
@utility border-warning-default {
  border-color: var(--color-feedback-orange-600);
  
  @variant dark {
    border-color: var(--color-feedback-orange-400);
  }
}

@utility border-warning-muted {
  border-color: var(--color-feedback-orange-500-56);
  
  @variant dark {
    border-color: var(--color-feedback-orange-400-56);
  }
}

@utility border-warning-softest {
  border-color: var(--color-feedback-orange-100);
  
  @variant dark {
    border-color: var(--color-feedback-orange-900);
  }
}

/* Focus Border utilities */
@utility border-focus {
  border-color: var(--border-focus);
}

/* =============================
 * FILLS - Standardized token patterns
 * Pattern: fill-{category}-{intensity}
 * Rest state has no suffix, follows Tailwind conventions
 * ============================*/

/* Neutral fill utilities - using primitive tokens */
/* fill-neutral-default is now fill-neutral (rest state) */
@utility fill-neutral-highlight {
  fill: var(--color-neutral-900);
  
  @variant dark {
    fill: var(--color-neutral-100);
  }
}

@utility fill-neutral-active {
  fill: var(--color-neutral-800);
  
  @variant dark {
    fill: var(--color-neutral-300);
  }
}

/* Primary neutral fill - rest state (no suffix) */
@utility fill-neutral {
  fill: var(--color-neutral-700);
  
  @variant dark {
    fill: var(--color-neutral-400);
  }
}

/* Backward compatibility alias - will be deprecated */
@utility fill-neutral-default {
  fill: var(--color-neutral-700);
  
  @variant dark {
    fill: var(--color-neutral-400);
  }
}

@utility fill-neutral-muted {
  fill: var(--color-neutral-500);
  
  @variant dark {
    fill: var(--color-neutral-600);
  }
}

/* Fixed dark fill */
@utility fill-neutral-highlight-fixed-dark {
  fill: var(--fill-neutral-highlight-fixed-dark);
}

@utility fill-neutral-default-fixed-dark {
  fill: var(--fill-neutral-default-fixed-dark);
}

@utility fill-neutral-muted-fixed-dark {
  fill: var(--fill-neutral-muted-fixed-dark);
}

/* Fixed light fill */
@utility fill-neutral-highlight-fixed-light {
  fill: var(--fill-neutral-highlight-fixed-light);
}

@utility fill-neutral-default-fixed-light {
  fill: var(--fill-neutral-default-fixed-light);
}

@utility fill-neutral-muted-fixed-light {
  fill: var(--fill-neutral-muted-fixed-light);
}

/* Inverse fill */
@utility fill-neutral-highlight-inverse {
  fill: var(--fill-neutral-highlight-inverse);
}

@utility fill-neutral-default-inverse {
  fill: var(--fill-neutral-default-inverse);
}

@utility fill-neutral-muted-inverse {
  fill: var(--fill-neutral-muted-inverse);
}

/* Link Fill */
@utility fill-link-primary {
  fill: var(--fill-link-primary);
}

@utility fill-link-secondary {
  fill: var(--fill-link-secondary);
}

@utility fill-link-visited {
  fill: var(--fill-link-visited);
}

/* Destructive fill utilities - using primitive tokens */
/* fill-destructive-default is now fill-destructive (rest state) */
@utility fill-destructive-highlight {
  fill: var(--color-feedback-red-400);
  
  @variant dark {
    fill: var(--color-feedback-red-400);
  }
}

/* Primary destructive fill - rest state (no suffix) */
@utility fill-destructive {
  fill: var(--color-feedback-red-600);
  
  @variant dark {
    fill: var(--color-feedback-red-400);
  }
}

/* Backward compatibility alias - will be deprecated */
@utility fill-destructive-default {
  fill: var(--color-feedback-red-600);
  
  @variant dark {
    fill: var(--color-feedback-red-400);
  }
}

@utility fill-destructive-muted {
  fill: var(--color-feedback-red-600-56);
  
  @variant dark {
    fill: var(--color-feedback-red-400-56);
  }
}

/* Information fill utilities - using primitive tokens */
/* fill-information-default is now fill-information (rest state) */
@utility fill-information-highlight {
  fill: var(--color-feedback-blue-400);
  
  @variant dark {
    fill: var(--color-feedback-blue-400);
  }
}

/* Primary information fill - rest state (no suffix) */
@utility fill-information {
  fill: var(--color-feedback-blue-600);
  
  @variant dark {
    fill: var(--color-feedback-blue-400);
  }
}

/* Backward compatibility alias - will be deprecated */
@utility fill-information-default {
  fill: var(--color-feedback-blue-600);
  
  @variant dark {
    fill: var(--color-feedback-blue-400);
  }
}

@utility fill-information-muted {
  fill: var(--color-feedback-blue-500-56);
  
  @variant dark {
    fill: var(--color-feedback-blue-400-56);
  }
}

/* Success fill utilities - using primitive tokens */
/* fill-success-default is now fill-success (rest state) */
@utility fill-success-highlight {
  fill: var(--color-feedback-green-400);
  
  @variant dark {
    fill: var(--color-feedback-green-400);
  }
}

/* Primary success fill - rest state (no suffix) */
@utility fill-success {
  fill: var(--color-feedback-green-600);
  
  @variant dark {
    fill: var(--color-feedback-green-400);
  }
}

/* Backward compatibility alias - will be deprecated */
@utility fill-success-default {
  fill: var(--color-feedback-green-600);
  
  @variant dark {
    fill: var(--color-feedback-green-400);
  }
}

@utility fill-success-muted {
  fill: var(--color-feedback-green-500-56);
  
  @variant dark {
    fill: var(--color-feedback-green-400-56);
  }
}

/* Warning fill utilities - using primitive tokens */
/* fill-warning-default is now fill-warning (rest state) */
@utility fill-warning-highlight {
  fill: var(--color-feedback-orange-400);
  
  @variant dark {
    fill: var(--color-feedback-orange-400);
  }
}

/* Primary warning fill - rest state (no suffix) */
@utility fill-warning {
  fill: var(--color-feedback-orange-600);
  
  @variant dark {
    fill: var(--color-feedback-orange-400);
  }
}

/* Backward compatibility alias - will be deprecated */
@utility fill-warning-default {
  fill: var(--color-feedback-orange-600);
  
  @variant dark {
    fill: var(--color-feedback-orange-400);
  }
}

@utility fill-warning-muted {
  fill: var(--color-feedback-orange-500-56);
  
  @variant dark {
    fill: var(--color-feedback-orange-400-56);
  }
}

/* =============================
 * STROKES - Standardized token patterns
 * Pattern: stroke-{category}-{intensity}
 * Rest state has no suffix, follows Tailwind conventions
 * ============================*/

/* Neutral stroke utilities - using primitive tokens */
/* stroke-neutral-default is now stroke-neutral (rest state) */
@utility stroke-neutral-highlight {
  stroke: var(--color-neutral-900);
  
  @variant dark {
    stroke: var(--color-neutral-100);
  }
}

@utility stroke-neutral-active {
  stroke: var(--color-neutral-800);
  
  @variant dark {
    stroke: var(--color-neutral-300);
  }
}

/* Primary neutral stroke - rest state (no suffix) */
@utility stroke-neutral {
  stroke: var(--color-neutral-700);
  
  @variant dark {
    stroke: var(--color-neutral-400);
  }
}

/* Backward compatibility alias - will be deprecated */
@utility stroke-neutral-default {
  stroke: var(--color-neutral-700);
  
  @variant dark {
    stroke: var(--color-neutral-400);
  }
}

@utility stroke-neutral-muted {
  stroke: var(--color-neutral-500);
  
  @variant dark {
    stroke: var(--color-neutral-600);
  }
}

/* Fixed dark stroke */
@utility stroke-neutral-highlight-fixed-dark {
  stroke: var(--stroke-neutral-highlight-fixed-dark);
}

@utility stroke-neutral-default-fixed-dark {
  stroke: var(--stroke-neutral-default-fixed-dark);
}

@utility stroke-neutral-muted-fixed-dark {
  stroke: var(--stroke-neutral-muted-fixed-dark);
}

/* Fixed light stroke */
@utility stroke-neutral-highlight-fixed-light {
  stroke: var(--stroke-neutral-highlight-fixed-light);
}

@utility stroke-neutral-default-fixed-light {
  stroke: var(--stroke-neutral-default-fixed-light);
}

@utility stroke-neutral-muted-fixed-light {
  stroke: var(--stroke-neutral-muted-fixed-light);
}

/* Inverse stroke */
@utility stroke-neutral-highlight-inverse {
  stroke: var(--stroke-neutral-highlight-inverse);
}

@utility stroke-neutral-default-inverse {
  stroke: var(--stroke-neutral-default-inverse);
}

@utility stroke-neutral-muted-inverse {
  stroke: var(--stroke-neutral-muted-inverse);
}

/* Link stroke */
@utility stroke-link-primary {
  stroke: var(--stroke-link-primary);
}

@utility stroke-link-secondary {
  stroke: var(--stroke-link-secondary);
}

@utility stroke-link-visited {
  stroke: var(--stroke-link-visited);
}

/* Destructive stroke utilities - using primitive tokens */
/* stroke-destructive-default is now stroke-destructive (rest state) */
@utility stroke-destructive-highlight {
  stroke: var(--color-feedback-red-400);
  
  @variant dark {
    stroke: var(--color-feedback-red-400);
  }
}

/* Primary destructive stroke - rest state (no suffix) */
@utility stroke-destructive {
  stroke: var(--color-feedback-red-600);
  
  @variant dark {
    stroke: var(--color-feedback-red-400);
  }
}

/* Backward compatibility alias - will be deprecated */
@utility stroke-destructive-default {
  stroke: var(--color-feedback-red-600);
  
  @variant dark {
    stroke: var(--color-feedback-red-400);
  }
}

@utility stroke-destructive-muted {
  stroke: var(--color-feedback-red-600-56);
  
  @variant dark {
    stroke: var(--color-feedback-red-400-56);
  }
}

/* Information stroke utilities - using primitive tokens */
/* stroke-information-default is now stroke-information (rest state) */
@utility stroke-information-highlight {
  stroke: var(--color-feedback-blue-400);
  
  @variant dark {
    stroke: var(--color-feedback-blue-400);
  }
}

/* Primary information stroke - rest state (no suffix) */
@utility stroke-information {
  stroke: var(--color-feedback-blue-600);
  
  @variant dark {
    stroke: var(--color-feedback-blue-400);
  }
}

/* Backward compatibility alias - will be deprecated */
@utility stroke-information-default {
  stroke: var(--color-feedback-blue-600);
  
  @variant dark {
    stroke: var(--color-feedback-blue-400);
  }
}

@utility stroke-information-muted {
  stroke: var(--color-feedback-blue-500-56);
  
  @variant dark {
    stroke: var(--color-feedback-blue-400-56);
  }
}

/* Success stroke utilities - using primitive tokens */
/* stroke-success-default is now stroke-success (rest state) */
@utility stroke-success-highlight {
  stroke: var(--color-feedback-green-400);
  
  @variant dark {
    stroke: var(--color-feedback-green-400);
  }
}

/* Primary success stroke - rest state (no suffix) */
@utility stroke-success {
  stroke: var(--color-feedback-green-600);
  
  @variant dark {
    stroke: var(--color-feedback-green-400);
  }
}

/* Backward compatibility alias - will be deprecated */
@utility stroke-success-default {
  stroke: var(--color-feedback-green-600);
  
  @variant dark {
    stroke: var(--color-feedback-green-400);
  }
}

@utility stroke-success-muted {
  stroke: var(--color-feedback-green-500-56);
  
  @variant dark {
    stroke: var(--color-feedback-green-400-56);
  }
}

/* Warning stroke utilities - using primitive tokens */
/* stroke-warning-default is now stroke-warning (rest state) */
@utility stroke-warning-highlight {
  stroke: var(--color-feedback-orange-400);
  
  @variant dark {
    stroke: var(--color-feedback-orange-400);
  }
}

/* Primary warning stroke - rest state (no suffix) */
@utility stroke-warning {
  stroke: var(--color-feedback-orange-600);
  
  @variant dark {
    stroke: var(--color-feedback-orange-400);
  }
}

/* Backward compatibility alias - will be deprecated */
@utility stroke-warning-default {
  stroke: var(--color-feedback-orange-600);
  
  @variant dark {
    stroke: var(--color-feedback-orange-400);
  }
}

@utility stroke-warning-muted {
  stroke: var(--color-feedback-orange-500-56);
  
  @variant dark {
    stroke: var(--color-feedback-orange-400-56);
  }
}

/* ============================================
<<<<<<< HEAD
* BACKGROUNDS
* ============================================ */
@utility bg-surface-primary-default {
  background-color: var(--bg-surface-primary-default);
=======
 * BACKGROUNDS - Standardized token patterns
 * Pattern: bg-{category}-{intensity}
 * Rest state has no suffix, follows Tailwind conventions
 * Verbose tokens simplified with backward compatibility
 * ============================================ */

/* Button Background utilities
 * Figma: Surface/Button/{Variant}/bg-{state} → Code: bg-btn-{variant}-{state}
 * Follows Tailwind conventions: bg-*, rest state has no suffix */
@utility bg-btn-brand {
  background-color: var(--color-base-white);
  
  @variant dark {
    background-color: var(--color-base-black);
  }
}

@utility bg-btn-brand-hover {
  background-color: var(--color-neutral-100);
  
  @variant dark {
    background-color: var(--color-neutral-900);
  }
}

@utility bg-btn-brand-active {
  background-color: var(--color-neutral-200);
  
  @variant dark {
    background-color: var(--color-neutral-800);
  }
}

@utility bg-btn-brand-disabled {
  background-color: var(--color-base-white);
  
  @variant dark {
    background-color: var(--color-base-black);
  }
}

@utility bg-btn-primary {
  background-color: var(--color-neutral-700);
  
  @variant dark {
    background-color: var(--color-neutral-300);
  }
}

@utility bg-btn-primary-hover {
  background-color: var(--color-neutral-800);
  
  @variant dark {
    background-color: var(--color-neutral-200);
  }
}

@utility bg-btn-primary-active {
  background-color: var(--color-neutral-900);
  
  @variant dark {
    background-color: var(--color-neutral-100);
  }
}

@utility bg-btn-primary-disabled {
  background-color: var(--color-neutral-900);
  opacity: 0.4;
  
  @variant dark {
    background-color: var(--color-neutral-100);
    opacity: 0.4;
  }
}

@utility bg-btn-secondary {
  background-color: var(--color-neutral-200);
  
  @variant dark {
    background-color: var(--color-neutral-800);
  }
}

@utility bg-btn-secondary-hover {
  background-color: var(--color-neutral-300);
  
  @variant dark {
    background-color: var(--color-neutral-700);
  }
}

@utility bg-btn-secondary-active {
  background-color: var(--color-neutral-400);
  
  @variant dark {
    background-color: var(--color-neutral-600);
  }
}

@utility bg-btn-secondary-disabled {
  background-color: var(--color-neutral-200);
  opacity: 0.4;
  
  @variant dark {
    background-color: var(--color-neutral-800);
    opacity: 0.4;
  }
}

@utility bg-btn-destructive {
  background-color: var(--color-feedback-red-600);
  
  @variant dark {
    background-color: var(--color-feedback-red-400);
  }
}

@utility bg-btn-destructive-hover {
  background-color: var(--color-feedback-red-700);
  
  @variant dark {
    background-color: var(--color-feedback-red-500);
  }
}

@utility bg-btn-destructive-active {
  background-color: var(--color-feedback-red-800);
  
  @variant dark {
    background-color: var(--color-feedback-red-600);
  }
}

@utility bg-btn-destructive-disabled {
  background-color: var(--color-feedback-red-600);
  opacity: 0.4;
  
  @variant dark {
    background-color: var(--color-feedback-red-400);
    opacity: 0.4;
  }
}

/* Surface Background utilities - simplified naming */
/* Verbose names simplified while maintaining backward compatibility */

/* Primary surface backgrounds */
@utility bg-surface-primary {
  background-color: var(--color-base-white);
  
  @variant dark {
    background-color: var(--color-base-black);
  }
>>>>>>> b33e62a (chore: remove intermdiate base variables in favour of inline utils)
}

@utility bg-surface-primary-inverse {
  background-color: var(--color-base-black);
  
  @variant dark {
    background-color: var(--color-base-white);
  }
}

/* Secondary surface backgrounds */
@utility bg-surface-secondary {
  background-color: var(--color-neutral-100);
  
  @variant dark {
    background-color: var(--color-neutral-900);
  }
}

@utility bg-surface-secondary-inverse {
  background-color: var(--color-neutral-900);
  
  @variant dark {
    background-color: var(--color-neutral-100);
  }
}

/* Tertiary surface backgrounds */
@utility bg-surface-tertiary {
  background-color: var(--color-neutral-200);
  
  @variant dark {
    background-color: var(--color-neutral-800);
  }
}

@utility bg-surface-tertiary-inverse {
  background-color: var(--color-neutral-800);
  
  @variant dark {
    background-color: var(--color-neutral-200);
  }
}

/* Backward compatibility aliases - will be deprecated */
@utility bg-surface-primary-default {
  background-color: var(--color-base-white);
  
  @variant dark {
    background-color: var(--color-base-black);
  }
}

@utility bg-surface-secondary-default {
  background-color: var(--color-neutral-100);
  
  @variant dark {
    background-color: var(--color-neutral-900);
  }
}

@utility bg-surface-tertiary-default {
  background-color: var(--color-neutral-200);
  
  @variant dark {
    background-color: var(--color-neutral-800);
  }
}

/* State backgrounds - using primitive tokens */
@utility bg-highlight {
  background-color: var(--color-neutral-100-64);
  
  @variant dark {
    background-color: var(--color-neutral-900-64);
  }
}

@utility bg-active {
  background-color: var(--color-neutral-300);
  
  @variant dark {
    background-color: var(--color-neutral-800);
  }
}

@utility bg-default {
  background-color: var(--color-neutral-200);
  
  @variant dark {
    background-color: var(--color-neutral-800);
  }
}

@utility bg-muted {
  background-color: var(--color-neutral-100);
  
  @variant dark {
    background-color: var(--color-neutral-900);
  }
}

@utility bg-inset {
  background-color: var(--color-neutral-100);
  
  @variant dark {
    background-color: var(--color-neutral-900);
  }
}

/* Fixed light backgrounds (always light regardless of theme) */
@utility bg-surface-primary-fixed-light {
  background-color: var(--color-base-white);
}

@utility bg-surface-secondary-fixed-light {
  background-color: var(--color-neutral-100);
}

@utility bg-surface-tertiary-fixed-light {
  background-color: var(--color-neutral-200);
}

/* Fixed dark backgrounds (always dark regardless of theme) */
@utility bg-surface-primary-fixed-dark {
  background-color: var(--color-base-black);
}

@utility bg-surface-secondary-fixed-dark {
  background-color: var(--color-neutral-900);
}

@utility bg-surface-tertiary-fixed-dark {
  background-color: var(--color-neutral-800);
}

/* Destructive backgrounds - standardized naming */
/* bg-destructive-default is now bg-destructive (rest state) */
@utility bg-destructive-highlight {
  background-color: var(--color-feedback-red-400);
  
  @variant dark {
    background-color: var(--color-feedback-red-400);
  }
}

/* Primary destructive background - rest state (no suffix) */
@utility bg-destructive {
  background-color: var(--color-feedback-red-600);
  
  @variant dark {
    background-color: var(--color-feedback-red-400);
  }
}

/* Backward compatibility alias - will be deprecated */
@utility bg-destructive-default {
  background-color: var(--color-feedback-red-600);
  
  @variant dark {
    background-color: var(--color-feedback-red-400);
  }
}

@utility bg-destructive-muted {
  background-color: var(--color-feedback-red-600-56);
  
  @variant dark {
    background-color: var(--color-feedback-red-400-56);
  }
}

@utility bg-destructive-softest {
  background-color: var(--color-feedback-red-100);
  
  @variant dark {
    background-color: var(--color-feedback-red-900);
  }
}

/* Information backgrounds - standardized naming */
/* bg-information-default is now bg-information (rest state) */
@utility bg-information-highlight {
  background-color: var(--color-feedback-blue-400);
  
  @variant dark {
    background-color: var(--color-feedback-blue-400);
  }
}

/* Primary information background - rest state (no suffix) */
@utility bg-information {
  background-color: var(--color-feedback-blue-600);
  
  @variant dark {
    background-color: var(--color-feedback-blue-400);
  }
}

/* Backward compatibility alias - will be deprecated */
@utility bg-information-default {
  background-color: var(--color-feedback-blue-600);
  
  @variant dark {
    background-color: var(--color-feedback-blue-400);
  }
}

@utility bg-information-muted {
  background-color: var(--color-feedback-blue-500-56);
  
  @variant dark {
    background-color: var(--color-feedback-blue-400-56);
  }
}

@utility bg-information-softest {
  background-color: var(--color-feedback-blue-100);
  
  @variant dark {
    background-color: var(--color-feedback-blue-900);
  }
}

/* Success backgrounds - standardized naming */
/* bg-success-default is now bg-success (rest state) */
@utility bg-success-highlight {
  background-color: var(--color-feedback-green-400);
  
  @variant dark {
    background-color: var(--color-feedback-green-400);
  }
}

/* Primary success background - rest state (no suffix) */
@utility bg-success {
  background-color: var(--color-feedback-green-600);
  
  @variant dark {
    background-color: var(--color-feedback-green-400);
  }
}

/* Backward compatibility alias - will be deprecated */
@utility bg-success-default {
  background-color: var(--color-feedback-green-600);
  
  @variant dark {
    background-color: var(--color-feedback-green-400);
  }
}

@utility bg-success-muted {
  background-color: var(--color-feedback-green-500-56);
  
  @variant dark {
    background-color: var(--color-feedback-green-400-56);
  }
}

@utility bg-success-softest {
  background-color: var(--color-feedback-green-100);
  
  @variant dark {
    background-color: var(--color-feedback-green-900);
  }
}

/* Warning backgrounds - standardized naming */
/* bg-warning-default is now bg-warning (rest state) */
@utility bg-warning-highlight {
  background-color: var(--color-feedback-orange-400);
  
  @variant dark {
    background-color: var(--color-feedback-orange-400);
  }
}

/* Primary warning background - rest state (no suffix) */
@utility bg-warning {
  background-color: var(--color-feedback-orange-600);
  
  @variant dark {
    background-color: var(--color-feedback-orange-400);
  }
}

/* Backward compatibility alias - will be deprecated */
@utility bg-warning-default {
  background-color: var(--color-feedback-orange-600);
  
  @variant dark {
    background-color: var(--color-feedback-orange-400);
  }
}

@utility bg-warning-muted {
  background-color: var(--color-feedback-orange-500-56);
  
  @variant dark {
    background-color: var(--color-feedback-orange-400-56);
  }
}

@utility bg-warning-softest {
  background-color: var(--color-feedback-orange-100);
  
  @variant dark {
    background-color: var(--color-feedback-orange-900);
  }
}


@layer utilities {
  .devicon-devicon-plain {
    max-width: 2em;
  }

  /* if you want to change the original color */
  .devicon-devicon-plain path {
    fill: var(--primary);
  }

  @keyframes slide-fade-in {
    from {
      opacity: 0;
      transform: translateX(100%);
    }
    to {
      opacity: 1;
      transform: translateX(0);
    }
  }

  @keyframes slide-fade-out {
    from {
      opacity: 1;
      transform: translateX(0);
    }
    to {
      opacity: 0;
      transform: translateX(-100%);
    }
  }

  @keyframes spin {
    from {
      transform: rotate(0deg);
    }
    to {
      transform: rotate(360deg);
    }
  }
}

/*
  Expose theme variables as utilities
  Note: We're being selective about what we expose to avoid people using raw color values
*/
@theme inline {
  /* --color-*: initial; */

  /* Link colors */
  --color-link: var(--color-brand-blue-600);

  /* Shadcn theme - using primitive tokens directly for better performance */
  --radius-sm: calc(var(--radius) - 4px);
  --radius-md: calc(var(--radius) - 2px);
  --radius-lg: var(--radius);
  --radius-xl: calc(var(--radius) + 4px);

  --color-background: var(--color-neutral-100);
  --color-background-pure: var(--color-base-white);
  --color-foreground: var(--color-neutral-900);
  --color-card: var(--color-base-white);
  --color-card-foreground: var(--color-neutral-900);
  --color-popover: var(--color-base-white);
  --color-popover-foreground: var(--color-neutral-900);
  --color-primary: var(--color-base-black);
  --color-primary-foreground: var(--color-base-white);
  --color-secondary: var(--color-neutral-100);
  --color-secondary-foreground: var(--color-neutral-900);
  --color-muted: var(--color-neutral-200);
  --color-muted-foreground: var(--color-neutral-600);
  --color-accent: var(--color-neutral-200);
  --color-accent-foreground: var(--color-neutral-900);
  --color-destructive: var(--color-feedback-red-700);
  --color-border: var(--color-neutral-300);
  --color-input: var(--color-neutral-400);
  --color-ring: var(--color-brand-blue-600);

  --color-chart-1: var(--color-brand-red-600);
  --color-chart-2: var(--color-brand-green-600);
  --color-chart-3: var(--color-brand-red-600);
  --color-chart-4: var(--color-brand-blue-600);
  --color-chart-5: var(--color-brand-green-600);

  --color-sidebar: var(--color-neutral-100);
  --color-sidebar-foreground: var(--color-neutral-900);
  --color-sidebar-primary: var(--color-base-black);
  --color-sidebar-primary-foreground: var(--color-neutral-300);
  --color-sidebar-accent: var(--color-neutral-300);
  --color-sidebar-accent-foreground: var(--color-neutral-900);
  --color-sidebar-border: var(--color-neutral-300);
  --color-sidebar-ring: var(--color-brand-blue-600);

  /* Alert Colors */
  --color-success: var(--color-feedback-green-100);
  --color-success-foreground: var(--color-feedback-green-700);
  --color-info: var(--color-info-100);
  --color-info-foreground: var(--color-info-700);
  --color-warning: var(--color-feedback-orange-100);
  --color-warning-foreground: var(--color-feedback-orange-700);
  --color-destructive: var(--color-feedback-red-700);
  --color-destructive-foreground: var(--color-base-white);
  --color-feature: var(--color-info-100);
  --color-feature-foreground: var(--color-info-700);

  /* Text Colors */
  --color-body: var(--color-neutral-900);
  --color-body-muted: var(--color-neutral-400);

  /* Animation */
  --keyframes-wiggle: {
    0%,
    100% {
      transform: rotate(-1.5deg);
    }
    50% {
      transform: rotate(1.5deg);
    }
  };
  --animate-wiggle: wiggle 1s ease-in-out infinite;

  /* Transition Timing Functions - using direct values for better performance */
  --ease-in-out-quad: cubic-bezier(0.455, 0.03, 0.515, 0.955);
  --ease-in-out-cubic: cubic-bezier(0.645, 0.045, 0.355, 1);
  --ease-in-out-quart: cubic-bezier(0.77, 0, 0.175, 1);
  --ease-in-out-quint: cubic-bezier(0.86, 0, 0.07, 1);
  --ease-in-out-expo: cubic-bezier(1, 0, 0, 1);
  --ease-in-out-circ: cubic-bezier(0.785, 0.135, 0.15, 0.86);

  --ease-in-quad: cubic-bezier(0.55, 0.085, 0.68, 0.53);
  --ease-in-cubic: cubic-bezier(0.55, 0.055, 0.675, 0.19);
  --ease-in-quart: cubic-bezier(0.895, 0.03, 0.685, 0.22);
  --ease-in-quint: cubic-bezier(0.755, 0.05, 0.855, 0.06);
  --ease-in-expo: cubic-bezier(0.95, 0.05, 0.795, 0.035);
  --ease-in-circ: cubic-bezier(0.6, 0.04, 0.98, 0.335);

  --ease-out-quad: cubic-bezier(0.25, 0.46, 0.45, 0.94);
  --ease-out-cubic: cubic-bezier(0.215, 0.61, 0.355, 1);
  --ease-out-quart: cubic-bezier(0.165, 0.84, 0.44, 1);
  --ease-out-quint: cubic-bezier(0.23, 1, 0.32, 1);
  --ease-out-expo: cubic-bezier(0.19, 1, 0.22, 1);
  --ease-out-circ: cubic-bezier(0.075, 0.82, 0.165, 1);
}


